// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        String
  accounts      Account[]
  sessions      Session[]

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  reports      Report[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Enum_RoleName {
  ADMIN
  USER
}

model Role {
  id    String        @id @default(cuid())
  name  Enum_RoleName @unique
  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name], map: "unique_role_name")
}

model Transaction {
  id       String          @id @default(cuid())
  amount   Decimal
  concept  String
  date     DateTime
  currency Currency
  type     TransactionType
  userId   String
  user     User            @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum Currency {
  USD
  EUR
  COP
  MXN
}

model Report {
  id          String   @id @default(cuid())
  generatedAt DateTime @default(now())
  description String
  userId      String
  user        User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
